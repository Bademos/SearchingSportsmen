---
openapi: 3.0.0
info:
  title: home-iot-api
  description: The API for the EatBacon IOT project
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/VADICURE/mini-project/1.0.0
  description: SwaggerHub API Auto Mocking
paths:
  /sign_up:
    post:
      tags:
      - authorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizeRequest'
      responses:
        "200":
          description: Status of the operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        "401":
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /sign_in:
    post:
      tags:
      - authentification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        "200":
          description: Status of the operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
        "401":
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /sign_out:
    get:
      tags:
      - authentification
      parameters:
      - name: login
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: session_token
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Status of the operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
      - bearerAuth: []
  /recovery/password_request:
    get:
      tags:
      - recovery
      parameters:
      - name: recovery_token
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: uiid
          example: 31416000-0000-0000-0000-000000000000
      responses:
        "200":
          description: Status of the operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
        "401":
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /recovery/email_request:
    get:
      tags:
      - recovery
      description: Request for email with recovery link
      parameters:
      - name: email
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: mail@mail.ru
      responses:
        "200":
          description: Status of the operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
        "401":
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /recovery/confirm_new_password:
    post:
      tags:
      - recovery
      parameters:
      - name: password
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Status of the operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
        "401":
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
      - bearerAuth: []
components:
  schemas:
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          default: 200
        message:
          type: string
          example: everything is ok
    ErrorMessage:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
          description: HTTP_RESPONSE_CODE
          default: 401
          enum:
          - 400
          - 401
          - 404
          - 500
        message:
          type: string
          description: HTTP_RESPONSE_MESSAGE
          default: INVALID_PASSWORD_OR_LOGIN
          enum:
          - INVALID_PASSWORD
          - INVALID_LOGIN
          - INVALID_PASSWORD_OR_LOGIN
          - SESSION_INPOSSIBLE
          - INTERNAl_SERVER_ERROR
    SessionResponse:
      type: object
      properties:
        session_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkhVSSBTT0JBQ0hJWSIsImlhdCI6MTUxNjIzOTAyMn0.ppY4cEzYNDzcy3K2CKTf9BuyCwZid9lWRwTH-qJQvkI
    AuthRequest:
      type: object
      properties:
        email:
          type: string
          example: student
        password:
          type: string
          description: user`s password
          example: Pa$$w0rd
    AuthorizeRequest:
      type: object
      properties:
        password:
          type: string
          description: user`s password
          example: Pa$$w0rd
        email:
          type: string
          description: user`s email
          example: mail@mail.ru
    AuthResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - OK
          - ERROR
        error:
          $ref: '#/components/schemas/ErrorMessage'
    RecoveryPasswordResponse:
      type: object
      properties:
        recovery-token:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
